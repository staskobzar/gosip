
//line parse_uri.rl:1
// -*-go-*-
//
// SIP URI parser

package sipmsg

import (
	"fmt"
)

func ParseURI(data string) (*URI, error) {
	
//line parse_uri.rl:13
	
//line parse_uri.go:18
var _uri_actions []byte = []byte{
	0, 1, 0, 1, 1, 1, 2, 1, 3, 
	1, 4, 1, 5, 1, 6, 1, 7, 
	2, 1, 0, 2, 7, 5, 
}

var _uri_key_offsets []int16 = []int16{
	0, 0, 2, 4, 6, 9, 25, 38, 
	44, 50, 64, 70, 76, 83, 91, 98, 
	106, 112, 119, 121, 136, 142, 148, 163, 
	176, 182, 188, 203, 219, 225, 231, 237, 
	243, 258, 277, 283, 291, 297, 305, 311, 
	319, 327, 335, 343, 351, 359, 366, 374, 
	382, 390, 392, 399, 408, 410, 413, 415, 
	418, 420, 423, 426, 427, 430, 431, 434, 
	435, 444, 453, 461, 469, 477, 485, 487, 
	493, 502, 511, 520, 522, 525, 528, 529, 
	530, 549, 567, 586, 603, 621, 635, 655, 
	661, 667, 673, 679, 696, 702, 708, 728, 
	746, 752, 758, 776, 794, 800, 806, 825, 
	831, 837, 843, 849, 868, 874, 880, 898, 
	920, 937, 956, 973, 992, 1009, 1028, 1047, 
	1066, 1085, 1104, 1123, 1124, 1135, 1144, 1148, 
	1152, 1156, 1160, 1162, 1178, 1196, 1211, 1226, 
	1244, 1262, 1280, 1298, 1316, 1334, 1352, 1368, 
	1389, 1411, 1427, 1449, 1460, 1471, 1482, 1485, 
	1504, 1521, 1537, 1553, 1569, 1585, 1601, 1619, 
	1638, 1657, 1677, 1695, 1714, 1732, 1752, 1772, 
	1792, 1812, 1832, 1852, 1872, 1890, 1912, 1934, 
	1956, 1975, 1994, 
}

var _uri_trans_keys []byte = []byte{
	83, 115, 73, 105, 80, 112, 58, 83, 
	115, 33, 37, 59, 61, 63, 91, 95, 
	126, 36, 47, 48, 57, 65, 90, 97, 
	122, 33, 37, 58, 61, 64, 95, 126, 
	36, 59, 63, 90, 97, 122, 48, 57, 
	65, 70, 97, 102, 48, 57, 65, 70, 
	97, 102, 33, 37, 61, 64, 95, 126, 
	36, 46, 48, 57, 65, 90, 97, 122, 
	48, 57, 65, 70, 97, 102, 48, 57, 
	65, 70, 97, 102, 91, 48, 57, 65, 
	90, 97, 122, 45, 46, 48, 57, 65, 
	90, 97, 122, 45, 48, 57, 65, 90, 
	97, 122, 45, 46, 48, 57, 65, 90, 
	97, 122, 48, 57, 65, 90, 97, 122, 
	45, 48, 57, 65, 90, 97, 122, 48, 
	57, 33, 37, 84, 93, 95, 116, 126, 
	36, 43, 45, 58, 65, 91, 97, 122, 
	48, 57, 65, 70, 97, 102, 48, 57, 
	65, 70, 97, 102, 33, 37, 84, 93, 
	95, 116, 126, 36, 43, 45, 58, 65, 
	91, 97, 122, 33, 37, 93, 95, 126, 
	36, 43, 45, 58, 65, 91, 97, 122, 
	48, 57, 65, 70, 97, 102, 48, 57, 
	65, 70, 97, 102, 33, 36, 37, 63, 
	93, 95, 126, 39, 43, 45, 58, 65, 
	91, 97, 122, 33, 36, 37, 61, 63, 
	93, 95, 126, 39, 43, 45, 58, 65, 
	91, 97, 122, 48, 57, 65, 70, 97, 
	102, 48, 57, 65, 70, 97, 102, 48, 
	57, 65, 70, 97, 102, 48, 57, 65, 
	70, 97, 102, 33, 36, 37, 63, 93, 
	95, 126, 39, 43, 45, 58, 65, 91, 
	97, 122, 33, 37, 39, 47, 58, 91, 
	93, 96, 126, 36, 41, 42, 43, 45, 
	57, 65, 90, 95, 122, 48, 57, 65, 
	90, 97, 122, 45, 46, 48, 57, 65, 
	90, 97, 122, 48, 57, 65, 90, 97, 
	122, 45, 46, 48, 57, 65, 90, 97, 
	122, 48, 57, 65, 90, 97, 122, 45, 
	46, 48, 57, 65, 90, 97, 122, 45, 
	46, 48, 57, 65, 90, 97, 122, 45, 
	46, 48, 57, 65, 90, 97, 122, 45, 
	46, 48, 57, 65, 90, 97, 122, 45, 
	46, 48, 57, 65, 90, 97, 122, 45, 
	46, 48, 57, 65, 90, 97, 122, 58, 
	48, 57, 65, 70, 97, 102, 58, 93, 
	48, 57, 65, 70, 97, 102, 58, 93, 
	48, 57, 65, 70, 97, 102, 58, 93, 
	48, 57, 65, 70, 97, 102, 58, 93, 
	58, 48, 57, 65, 70, 97, 102, 46, 
	58, 93, 48, 57, 65, 70, 97, 102, 
	48, 57, 46, 48, 57, 48, 57, 46, 
	48, 57, 48, 57, 93, 48, 57, 93, 
	48, 57, 93, 46, 48, 57, 46, 46, 
	48, 57, 46, 46, 58, 93, 48, 57, 
	65, 70, 97, 102, 46, 58, 93, 48, 
	57, 65, 70, 97, 102, 58, 93, 48, 
	57, 65, 70, 97, 102, 58, 93, 48, 
	57, 65, 70, 97, 102, 58, 93, 48, 
	57, 65, 70, 97, 102, 58, 93, 48, 
	57, 65, 70, 97, 102, 58, 93, 48, 
	57, 65, 70, 97, 102, 46, 58, 93, 
	48, 57, 65, 70, 97, 102, 46, 58, 
	93, 48, 57, 65, 70, 97, 102, 46, 
	58, 93, 48, 57, 65, 70, 97, 102, 
	48, 57, 46, 48, 57, 46, 48, 57, 
	46, 58, 33, 37, 45, 46, 58, 59, 
	61, 63, 64, 95, 126, 36, 47, 48, 
	57, 65, 90, 97, 122, 33, 37, 45, 
	58, 59, 61, 63, 64, 95, 126, 36, 
	47, 48, 57, 65, 90, 97, 122, 33, 
	37, 45, 46, 58, 59, 61, 63, 64, 
	95, 126, 36, 47, 48, 57, 65, 90, 
	97, 122, 33, 37, 58, 59, 61, 63, 
	64, 95, 126, 36, 47, 48, 57, 65, 
	90, 97, 122, 33, 37, 45, 58, 59, 
	61, 63, 64, 95, 126, 36, 47, 48, 
	57, 65, 90, 97, 122, 33, 37, 61, 
	64, 95, 126, 36, 46, 48, 57, 65, 
	90, 97, 122, 33, 37, 44, 58, 59, 
	61, 63, 64, 84, 91, 93, 95, 116, 
	126, 36, 57, 65, 90, 97, 122, 48, 
	57, 65, 70, 97, 102, 48, 57, 65, 
	70, 97, 102, 48, 57, 65, 70, 97, 
	102, 48, 57, 65, 70, 97, 102, 33, 
	37, 44, 47, 58, 61, 64, 91, 93, 
	95, 126, 36, 57, 65, 90, 97, 122, 
	48, 57, 65, 70, 97, 102, 48, 57, 
	65, 70, 97, 102, 33, 37, 44, 58, 
	59, 61, 63, 64, 84, 91, 93, 95, 
	116, 126, 36, 57, 65, 90, 97, 122, 
	33, 37, 44, 58, 59, 61, 63, 64, 
	91, 93, 95, 126, 36, 57, 65, 90, 
	97, 122, 48, 57, 65, 70, 97, 102, 
	48, 57, 65, 70, 97, 102, 33, 37, 
	38, 44, 58, 59, 61, 64, 91, 93, 
	95, 126, 36, 57, 63, 90, 97, 122, 
	33, 37, 38, 44, 58, 59, 61, 64, 
	91, 93, 95, 126, 36, 57, 63, 90, 
	97, 122, 48, 57, 65, 70, 97, 102, 
	48, 57, 65, 70, 97, 102, 33, 37, 
	38, 44, 47, 58, 61, 63, 64, 91, 
	93, 95, 126, 36, 57, 65, 90, 97, 
	122, 48, 57, 65, 70, 97, 102, 48, 
	57, 65, 70, 97, 102, 48, 57, 65, 
	70, 97, 102, 48, 57, 65, 70, 97, 
	102, 33, 37, 38, 44, 47, 58, 61, 
	63, 64, 91, 93, 95, 126, 36, 57, 
	65, 90, 97, 122, 48, 57, 65, 70, 
	97, 102, 48, 57, 65, 70, 97, 102, 
	33, 37, 38, 44, 58, 59, 61, 64, 
	91, 93, 95, 126, 36, 57, 63, 90, 
	97, 122, 33, 37, 39, 44, 47, 58, 
	59, 61, 63, 64, 91, 93, 96, 126, 
	36, 41, 42, 57, 65, 90, 95, 122, 
	33, 37, 58, 59, 61, 63, 64, 95, 
	126, 36, 47, 48, 57, 65, 90, 97, 
	122, 33, 37, 45, 46, 58, 59, 61, 
	63, 64, 95, 126, 36, 47, 48, 57, 
	65, 90, 97, 122, 33, 37, 58, 59, 
	61, 63, 64, 95, 126, 36, 47, 48, 
	57, 65, 90, 97, 122, 33, 37, 45, 
	46, 58, 59, 61, 63, 64, 95, 126, 
	36, 47, 48, 57, 65, 90, 97, 122, 
	33, 37, 58, 59, 61, 63, 64, 95, 
	126, 36, 47, 48, 57, 65, 90, 97, 
	122, 33, 37, 45, 46, 58, 59, 61, 
	63, 64, 95, 126, 36, 47, 48, 57, 
	65, 90, 97, 122, 33, 37, 45, 46, 
	58, 59, 61, 63, 64, 95, 126, 36, 
	47, 48, 57, 65, 90, 97, 122, 33, 
	37, 45, 46, 58, 59, 61, 63, 64, 
	95, 126, 36, 47, 48, 57, 65, 90, 
	97, 122, 33, 37, 45, 46, 58, 59, 
	61, 63, 64, 95, 126, 36, 47, 48, 
	57, 65, 90, 97, 122, 33, 37, 45, 
	46, 58, 59, 61, 63, 64, 95, 126, 
	36, 47, 48, 57, 65, 90, 97, 122, 
	33, 37, 45, 46, 58, 59, 61, 63, 
	64, 95, 126, 36, 47, 48, 57, 65, 
	90, 97, 122, 58, 45, 46, 58, 59, 
	63, 48, 57, 65, 90, 97, 122, 58, 
	59, 63, 48, 57, 65, 90, 97, 122, 
	59, 63, 48, 57, 59, 63, 48, 57, 
	59, 63, 48, 57, 59, 63, 48, 57, 
	59, 63, 33, 37, 59, 61, 63, 93, 
	95, 126, 36, 43, 45, 58, 65, 91, 
	97, 122, 33, 37, 59, 61, 63, 82, 
	93, 95, 114, 126, 36, 43, 45, 58, 
	65, 91, 97, 122, 33, 37, 59, 63, 
	93, 95, 126, 36, 43, 45, 58, 65, 
	91, 97, 122, 33, 37, 38, 63, 93, 
	95, 126, 36, 43, 45, 58, 65, 91, 
	97, 122, 33, 37, 59, 61, 63, 65, 
	93, 95, 97, 126, 36, 43, 45, 58, 
	66, 91, 98, 122, 33, 37, 59, 61, 
	63, 78, 93, 95, 110, 126, 36, 43, 
	45, 58, 65, 91, 97, 122, 33, 37, 
	59, 61, 63, 83, 93, 95, 115, 126, 
	36, 43, 45, 58, 65, 91, 97, 122, 
	33, 37, 59, 61, 63, 80, 93, 95, 
	112, 126, 36, 43, 45, 58, 65, 91, 
	97, 122, 33, 37, 59, 61, 63, 79, 
	93, 95, 111, 126, 36, 43, 45, 58, 
	65, 91, 97, 122, 33, 37, 59, 61, 
	63, 82, 93, 95, 114, 126, 36, 43, 
	45, 58, 65, 91, 97, 122, 33, 37, 
	59, 61, 63, 84, 93, 95, 116, 126, 
	36, 43, 45, 58, 65, 91, 97, 122, 
	33, 37, 59, 61, 63, 93, 95, 126, 
	36, 43, 45, 58, 65, 91, 97, 122, 
	33, 37, 39, 47, 58, 59, 63, 91, 
	93, 96, 126, 36, 41, 42, 43, 45, 
	57, 65, 90, 95, 122, 33, 37, 39, 
	59, 63, 126, 42, 43, 45, 46, 48, 
	57, 65, 70, 71, 90, 95, 96, 97, 
	102, 103, 122, 33, 37, 39, 59, 63, 
	126, 42, 43, 45, 46, 48, 57, 65, 
	90, 95, 122, 33, 37, 39, 59, 63, 
	126, 42, 43, 45, 46, 48, 57, 65, 
	70, 71, 90, 95, 96, 97, 102, 103, 
	122, 45, 46, 58, 59, 63, 48, 57, 
	65, 90, 97, 122, 45, 46, 58, 59, 
	63, 48, 57, 65, 90, 97, 122, 45, 
	46, 58, 59, 63, 48, 57, 65, 90, 
	97, 122, 58, 59, 63, 33, 37, 45, 
	46, 58, 59, 61, 63, 64, 95, 126, 
	36, 47, 48, 57, 65, 90, 97, 122, 
	33, 37, 58, 59, 61, 63, 64, 95, 
	126, 36, 47, 48, 57, 65, 90, 97, 
	122, 33, 37, 59, 61, 63, 64, 95, 
	126, 36, 46, 48, 57, 65, 90, 97, 
	122, 33, 37, 59, 61, 63, 64, 95, 
	126, 36, 46, 48, 57, 65, 90, 97, 
	122, 33, 37, 59, 61, 63, 64, 95, 
	126, 36, 46, 48, 57, 65, 90, 97, 
	122, 33, 37, 59, 61, 63, 64, 95, 
	126, 36, 46, 48, 57, 65, 90, 97, 
	122, 33, 37, 59, 61, 63, 64, 95, 
	126, 36, 46, 48, 57, 65, 90, 97, 
	122, 33, 37, 44, 58, 59, 61, 63, 
	64, 91, 93, 95, 126, 36, 57, 65, 
	90, 97, 122, 33, 37, 44, 47, 58, 
	59, 61, 63, 64, 91, 93, 95, 126, 
	36, 57, 65, 90, 97, 122, 33, 37, 
	44, 47, 58, 59, 61, 63, 64, 91, 
	93, 95, 126, 36, 57, 65, 90, 97, 
	122, 33, 37, 44, 58, 59, 61, 63, 
	64, 82, 91, 93, 95, 114, 126, 36, 
	57, 65, 90, 97, 122, 33, 37, 44, 
	58, 59, 61, 63, 64, 91, 93, 95, 
	126, 36, 57, 65, 90, 97, 122, 33, 
	37, 38, 44, 47, 58, 61, 63, 64, 
	91, 93, 95, 126, 36, 57, 65, 90, 
	97, 122, 33, 37, 38, 44, 58, 59, 
	61, 64, 91, 93, 95, 126, 36, 57, 
	63, 90, 97, 122, 33, 37, 44, 58, 
	59, 61, 63, 64, 65, 91, 93, 95, 
	97, 126, 36, 57, 66, 90, 98, 122, 
	33, 37, 44, 58, 59, 61, 63, 64, 
	78, 91, 93, 95, 110, 126, 36, 57, 
	65, 90, 97, 122, 33, 37, 44, 58, 
	59, 61, 63, 64, 83, 91, 93, 95, 
	115, 126, 36, 57, 65, 90, 97, 122, 
	33, 37, 44, 58, 59, 61, 63, 64, 
	80, 91, 93, 95, 112, 126, 36, 57, 
	65, 90, 97, 122, 33, 37, 44, 58, 
	59, 61, 63, 64, 79, 91, 93, 95, 
	111, 126, 36, 57, 65, 90, 97, 122, 
	33, 37, 44, 58, 59, 61, 63, 64, 
	82, 91, 93, 95, 114, 126, 36, 57, 
	65, 90, 97, 122, 33, 37, 44, 58, 
	59, 61, 63, 64, 84, 91, 93, 95, 
	116, 126, 36, 57, 65, 90, 97, 122, 
	33, 37, 44, 58, 59, 61, 63, 64, 
	91, 93, 95, 126, 36, 57, 65, 90, 
	97, 122, 33, 37, 39, 44, 47, 58, 
	59, 61, 63, 64, 91, 93, 96, 126, 
	36, 41, 42, 57, 65, 90, 95, 122, 
	33, 37, 39, 59, 63, 126, 42, 43, 
	45, 46, 48, 57, 65, 70, 71, 90, 
	95, 96, 97, 102, 103, 122, 33, 37, 
	39, 59, 63, 126, 42, 43, 45, 46, 
	48, 57, 65, 70, 71, 90, 95, 96, 
	97, 102, 103, 122, 33, 37, 45, 46, 
	58, 59, 61, 63, 64, 95, 126, 36, 
	47, 48, 57, 65, 90, 97, 122, 33, 
	37, 45, 46, 58, 59, 61, 63, 64, 
	95, 126, 36, 47, 48, 57, 65, 90, 
	97, 122, 33, 37, 45, 46, 58, 59, 
	61, 63, 64, 95, 126, 36, 47, 48, 
	57, 65, 90, 97, 122, 
}

var _uri_single_lengths []byte = []byte{
	0, 2, 2, 2, 3, 8, 7, 0, 
	0, 6, 0, 0, 1, 2, 1, 2, 
	0, 1, 0, 7, 0, 0, 7, 5, 
	0, 0, 7, 8, 0, 0, 0, 0, 
	7, 9, 0, 2, 0, 2, 0, 2, 
	2, 2, 2, 2, 2, 1, 2, 2, 
	2, 2, 1, 3, 0, 1, 0, 1, 
	0, 1, 1, 1, 1, 1, 1, 1, 
	3, 3, 2, 2, 2, 2, 2, 0, 
	3, 3, 3, 0, 1, 1, 1, 1, 
	11, 10, 11, 9, 10, 6, 14, 0, 
	0, 0, 0, 11, 0, 0, 14, 12, 
	0, 0, 12, 12, 0, 0, 13, 0, 
	0, 0, 0, 13, 0, 0, 12, 14, 
	9, 11, 9, 11, 9, 11, 11, 11, 
	11, 11, 11, 1, 5, 3, 2, 2, 
	2, 2, 2, 8, 10, 7, 7, 10, 
	10, 10, 10, 10, 10, 10, 8, 11, 
	6, 6, 6, 5, 5, 5, 3, 11, 
	9, 8, 8, 8, 8, 8, 12, 13, 
	13, 14, 12, 13, 12, 14, 14, 14, 
	14, 14, 14, 14, 12, 14, 6, 6, 
	11, 11, 11, 
}

var _uri_range_lengths []byte = []byte{
	0, 0, 0, 0, 0, 4, 3, 3, 
	3, 4, 3, 3, 3, 3, 3, 3, 
	3, 3, 1, 4, 3, 3, 4, 4, 
	3, 3, 4, 4, 3, 3, 3, 3, 
	4, 5, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 0, 3, 3, 1, 1, 1, 1, 
	1, 1, 1, 0, 1, 0, 1, 0, 
	3, 3, 3, 3, 3, 3, 0, 3, 
	3, 3, 3, 1, 1, 1, 0, 0, 
	4, 4, 4, 4, 4, 4, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 0, 3, 3, 1, 1, 
	1, 1, 0, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 5, 
	8, 5, 8, 3, 3, 3, 0, 4, 
	4, 4, 4, 4, 4, 4, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 4, 8, 8, 
	4, 4, 4, 
}

var _uri_index_offsets []int16 = []int16{
	0, 0, 3, 6, 9, 13, 26, 37, 
	41, 45, 56, 60, 64, 69, 75, 80, 
	86, 90, 95, 97, 109, 113, 117, 129, 
	139, 143, 147, 159, 172, 176, 180, 184, 
	188, 200, 215, 219, 225, 229, 235, 239, 
	245, 251, 257, 263, 269, 275, 280, 286, 
	292, 298, 301, 306, 313, 315, 318, 320, 
	323, 325, 328, 331, 333, 336, 338, 341, 
	343, 350, 357, 363, 369, 375, 381, 384, 
	388, 395, 402, 409, 411, 414, 417, 419, 
	421, 437, 452, 468, 482, 497, 508, 526, 
	530, 534, 538, 542, 557, 561, 565, 583, 
	599, 603, 607, 623, 639, 643, 647, 664, 
	668, 672, 676, 680, 697, 701, 705, 721, 
	740, 754, 770, 784, 800, 814, 830, 846, 
	862, 878, 894, 910, 912, 921, 928, 932, 
	936, 940, 944, 947, 960, 975, 987, 999, 
	1014, 1029, 1044, 1059, 1074, 1089, 1104, 1117, 
	1134, 1149, 1161, 1176, 1185, 1194, 1203, 1207, 
	1223, 1237, 1250, 1263, 1276, 1289, 1302, 1318, 
	1335, 1352, 1370, 1386, 1403, 1419, 1437, 1455, 
	1473, 1491, 1509, 1527, 1545, 1561, 1580, 1595, 
	1610, 1626, 1642, 
}

var _uri_indicies []byte = []byte{
	0, 0, 1, 2, 2, 1, 3, 3, 
	1, 4, 5, 5, 1, 6, 7, 6, 
	6, 6, 10, 6, 6, 6, 8, 9, 
	9, 1, 11, 12, 13, 11, 14, 11, 
	11, 11, 11, 11, 1, 15, 15, 15, 
	1, 11, 11, 11, 1, 13, 16, 13, 
	14, 13, 13, 13, 13, 13, 13, 1, 
	17, 17, 17, 1, 13, 13, 13, 1, 
	10, 18, 19, 19, 1, 20, 21, 22, 
	23, 23, 1, 20, 23, 23, 23, 1, 
	20, 24, 23, 23, 23, 1, 23, 25, 
	25, 1, 26, 25, 25, 25, 1, 27, 
	1, 28, 29, 30, 28, 28, 30, 28, 
	28, 28, 28, 28, 1, 31, 31, 31, 
	1, 32, 32, 32, 1, 32, 33, 34, 
	32, 32, 34, 32, 32, 32, 32, 32, 
	1, 35, 36, 35, 35, 35, 35, 35, 
	35, 35, 1, 37, 37, 37, 1, 35, 
	35, 35, 1, 38, 38, 39, 38, 38, 
	38, 38, 38, 38, 38, 38, 1, 40, 
	40, 41, 42, 40, 40, 40, 40, 40, 
	40, 40, 40, 1, 43, 43, 43, 1, 
	40, 40, 40, 1, 44, 44, 44, 1, 
	42, 42, 42, 1, 40, 40, 41, 40, 
	40, 40, 40, 40, 40, 40, 40, 1, 
	45, 46, 45, 35, 35, 35, 35, 47, 
	45, 35, 45, 45, 45, 45, 1, 48, 
	25, 25, 1, 20, 49, 50, 23, 23, 
	1, 51, 25, 25, 1, 20, 52, 53, 
	23, 23, 1, 54, 25, 25, 1, 20, 
	52, 55, 23, 23, 1, 20, 52, 23, 
	23, 23, 1, 20, 49, 56, 23, 23, 
	1, 20, 49, 23, 23, 23, 1, 20, 
	21, 57, 23, 23, 1, 20, 21, 23, 
	23, 23, 1, 59, 58, 58, 58, 1, 
	61, 62, 60, 60, 60, 1, 61, 62, 
	63, 63, 63, 1, 61, 62, 64, 64, 
	64, 1, 61, 62, 1, 66, 65, 58, 
	58, 1, 67, 61, 62, 68, 60, 60, 
	1, 69, 1, 70, 71, 1, 72, 1, 
	73, 74, 1, 75, 1, 62, 76, 1, 
	62, 77, 1, 62, 1, 73, 78, 1, 
	73, 1, 70, 79, 1, 70, 1, 67, 
	61, 62, 80, 63, 63, 1, 67, 61, 
	62, 64, 64, 64, 1, 82, 62, 81, 
	81, 81, 1, 84, 62, 83, 83, 83, 
	1, 84, 62, 85, 85, 85, 1, 84, 
	62, 86, 86, 86, 1, 84, 62, 1, 
	87, 81, 81, 1, 67, 84, 62, 88, 
	83, 83, 1, 67, 84, 62, 89, 85, 
	85, 1, 67, 84, 62, 86, 86, 86, 
	1, 90, 1, 67, 91, 1, 67, 92, 
	1, 67, 1, 66, 1, 11, 12, 93, 
	94, 13, 11, 11, 11, 14, 11, 11, 
	11, 95, 96, 96, 1, 11, 12, 93, 
	13, 11, 11, 11, 14, 11, 11, 11, 
	96, 96, 96, 1, 11, 12, 93, 97, 
	13, 11, 11, 11, 14, 11, 11, 11, 
	96, 96, 96, 1, 11, 12, 13, 11, 
	11, 11, 14, 11, 11, 11, 96, 98, 
	98, 1, 11, 12, 99, 13, 11, 11, 
	11, 14, 11, 11, 11, 98, 98, 98, 
	1, 13, 16, 13, 14, 13, 13, 13, 
	100, 13, 13, 1, 101, 102, 11, 103, 
	11, 11, 11, 14, 104, 28, 28, 101, 
	104, 101, 101, 101, 101, 1, 105, 105, 
	105, 1, 106, 106, 106, 1, 107, 107, 
	107, 1, 108, 108, 108, 1, 109, 110, 
	13, 35, 35, 13, 14, 35, 35, 109, 
	109, 109, 109, 109, 1, 111, 111, 111, 
	1, 109, 109, 109, 1, 106, 112, 11, 
	108, 11, 11, 11, 14, 113, 32, 32, 
	106, 113, 106, 106, 106, 106, 1, 114, 
	115, 11, 109, 11, 11, 11, 14, 35, 
	35, 114, 114, 114, 114, 114, 1, 116, 
	116, 116, 1, 114, 114, 114, 1, 117, 
	118, 11, 11, 119, 11, 11, 14, 38, 
	38, 117, 117, 117, 117, 117, 1, 120, 
	121, 11, 11, 122, 11, 123, 14, 40, 
	40, 120, 120, 120, 120, 120, 1, 124, 
	124, 124, 1, 120, 120, 120, 1, 122, 
	125, 13, 13, 40, 40, 126, 40, 14, 
	40, 40, 122, 122, 122, 122, 122, 1, 
	127, 127, 127, 1, 122, 122, 122, 1, 
	128, 128, 128, 1, 126, 126, 126, 1, 
	122, 125, 13, 13, 40, 40, 13, 40, 
	14, 40, 40, 122, 122, 122, 122, 122, 
	1, 129, 129, 129, 1, 123, 123, 123, 
	1, 120, 121, 11, 11, 122, 11, 11, 
	14, 40, 40, 120, 120, 120, 120, 120, 
	1, 130, 131, 130, 11, 114, 109, 11, 
	11, 11, 14, 35, 35, 47, 130, 114, 
	130, 130, 130, 1, 11, 12, 13, 11, 
	11, 11, 14, 11, 11, 11, 132, 98, 
	98, 1, 11, 12, 93, 133, 13, 11, 
	11, 11, 14, 11, 11, 11, 134, 96, 
	96, 1, 11, 12, 13, 11, 11, 11, 
	14, 11, 11, 11, 135, 98, 98, 1, 
	11, 12, 93, 136, 13, 11, 11, 11, 
	14, 11, 11, 11, 137, 96, 96, 1, 
	11, 12, 13, 11, 11, 11, 14, 11, 
	11, 11, 138, 98, 98, 1, 11, 12, 
	93, 136, 13, 11, 11, 11, 14, 11, 
	11, 11, 139, 96, 96, 1, 11, 12, 
	93, 136, 13, 11, 11, 11, 14, 11, 
	11, 11, 96, 96, 96, 1, 11, 12, 
	93, 133, 13, 11, 11, 11, 14, 11, 
	11, 11, 140, 96, 96, 1, 11, 12, 
	93, 133, 13, 11, 11, 11, 14, 11, 
	11, 11, 96, 96, 96, 1, 11, 12, 
	93, 94, 13, 11, 11, 11, 14, 11, 
	11, 11, 141, 96, 96, 1, 11, 12, 
	93, 94, 13, 11, 11, 11, 14, 11, 
	11, 11, 96, 96, 96, 1, 4, 1, 
	26, 142, 143, 144, 145, 25, 25, 25, 
	1, 143, 144, 145, 23, 25, 25, 1, 
	144, 145, 146, 1, 144, 145, 147, 1, 
	144, 145, 148, 1, 144, 145, 149, 1, 
	144, 145, 1, 32, 33, 150, 151, 152, 
	32, 32, 32, 32, 32, 32, 32, 1, 
	32, 33, 150, 151, 152, 153, 32, 32, 
	153, 32, 32, 32, 32, 32, 1, 35, 
	36, 150, 152, 35, 35, 35, 35, 35, 
	35, 35, 1, 42, 154, 155, 42, 42, 
	42, 42, 42, 42, 42, 42, 1, 32, 
	33, 150, 151, 152, 156, 32, 32, 156, 
	32, 32, 32, 32, 32, 1, 32, 33, 
	150, 151, 152, 157, 32, 32, 157, 32, 
	32, 32, 32, 32, 1, 32, 33, 150, 
	151, 152, 158, 32, 32, 158, 32, 32, 
	32, 32, 32, 1, 32, 33, 150, 151, 
	152, 159, 32, 32, 159, 32, 32, 32, 
	32, 32, 1, 32, 33, 150, 151, 152, 
	160, 32, 32, 160, 32, 32, 32, 32, 
	32, 1, 32, 33, 150, 151, 152, 161, 
	32, 32, 161, 32, 32, 32, 32, 32, 
	1, 32, 33, 150, 151, 152, 162, 32, 
	32, 162, 32, 32, 32, 32, 32, 1, 
	32, 33, 150, 163, 152, 32, 32, 32, 
	32, 32, 32, 32, 1, 164, 165, 164, 
	35, 35, 166, 167, 35, 35, 168, 164, 
	35, 164, 164, 164, 164, 1, 168, 168, 
	168, 166, 167, 168, 168, 168, 169, 169, 
	168, 168, 169, 168, 1, 168, 168, 168, 
	166, 167, 168, 168, 168, 168, 168, 168, 
	1, 168, 168, 168, 166, 167, 168, 168, 
	168, 164, 164, 168, 168, 164, 168, 1, 
	20, 24, 143, 144, 145, 170, 23, 23, 
	1, 20, 24, 143, 144, 145, 171, 23, 
	23, 1, 20, 24, 143, 144, 145, 23, 
	23, 23, 1, 143, 144, 145, 1, 11, 
	12, 99, 172, 173, 174, 11, 175, 14, 
	11, 11, 11, 98, 98, 98, 1, 11, 
	12, 173, 174, 11, 175, 14, 11, 11, 
	11, 96, 98, 98, 1, 13, 16, 144, 
	13, 145, 14, 13, 13, 13, 176, 13, 
	13, 1, 13, 16, 144, 13, 145, 14, 
	13, 13, 13, 177, 13, 13, 1, 13, 
	16, 144, 13, 145, 14, 13, 13, 13, 
	178, 13, 13, 1, 13, 16, 144, 13, 
	145, 14, 13, 13, 13, 179, 13, 13, 
	1, 13, 16, 144, 13, 145, 14, 13, 
	13, 13, 13, 13, 13, 1, 106, 112, 
	11, 108, 180, 181, 182, 14, 32, 32, 
	106, 106, 106, 106, 106, 1, 108, 183, 
	13, 32, 32, 150, 184, 152, 14, 32, 
	32, 108, 108, 108, 108, 108, 1, 109, 
	110, 13, 35, 35, 150, 13, 152, 14, 
	35, 35, 109, 109, 109, 109, 109, 1, 
	106, 112, 11, 108, 180, 181, 182, 14, 
	185, 32, 32, 106, 185, 106, 106, 106, 
	106, 1, 114, 115, 11, 109, 180, 11, 
	182, 14, 35, 35, 114, 114, 114, 114, 
	114, 1, 126, 186, 187, 13, 42, 42, 
	13, 42, 14, 42, 42, 126, 126, 126, 
	126, 126, 1, 123, 188, 189, 11, 126, 
	11, 11, 14, 42, 42, 123, 123, 123, 
	123, 123, 1, 106, 112, 11, 108, 180, 
	181, 182, 14, 190, 32, 32, 106, 190, 
	106, 106, 106, 106, 1, 106, 112, 11, 
	108, 180, 181, 182, 14, 191, 32, 32, 
	106, 191, 106, 106, 106, 106, 1, 106, 
	112, 11, 108, 180, 181, 182, 14, 192, 
	32, 32, 106, 192, 106, 106, 106, 106, 
	1, 106, 112, 11, 108, 180, 181, 182, 
	14, 193, 32, 32, 106, 193, 106, 106, 
	106, 106, 1, 106, 112, 11, 108, 180, 
	181, 182, 14, 194, 32, 32, 106, 194, 
	106, 106, 106, 106, 1, 106, 112, 11, 
	108, 180, 181, 182, 14, 195, 32, 32, 
	106, 195, 106, 106, 106, 106, 1, 106, 
	112, 11, 108, 180, 181, 182, 14, 196, 
	32, 32, 106, 196, 106, 106, 106, 106, 
	1, 106, 112, 11, 108, 180, 197, 182, 
	14, 32, 32, 106, 106, 106, 106, 106, 
	1, 198, 199, 198, 11, 114, 109, 200, 
	11, 201, 14, 35, 35, 168, 198, 114, 
	198, 198, 198, 1, 168, 168, 168, 166, 
	167, 168, 168, 168, 202, 202, 168, 168, 
	202, 168, 1, 168, 168, 168, 166, 167, 
	168, 168, 168, 198, 198, 168, 168, 198, 
	168, 1, 11, 12, 93, 97, 173, 174, 
	11, 175, 14, 11, 11, 11, 203, 96, 
	96, 1, 11, 12, 93, 97, 173, 174, 
	11, 175, 14, 11, 11, 11, 204, 96, 
	96, 1, 11, 12, 93, 97, 173, 174, 
	11, 175, 14, 11, 11, 11, 96, 96, 
	96, 1, 
}

var _uri_trans_targs []byte = []byte{
	2, 0, 3, 4, 5, 123, 6, 7, 
	80, 151, 45, 6, 7, 9, 12, 8, 
	10, 11, 13, 124, 14, 34, 43, 15, 
	16, 124, 17, 126, 131, 20, 132, 21, 
	131, 20, 132, 133, 24, 25, 27, 28, 
	27, 28, 134, 29, 31, 143, 144, 145, 
	35, 36, 41, 37, 38, 39, 147, 40, 
	42, 44, 46, 79, 47, 50, 150, 48, 
	49, 51, 66, 52, 64, 53, 54, 62, 
	55, 56, 60, 57, 58, 59, 61, 63, 
	65, 67, 75, 68, 71, 69, 70, 72, 
	73, 74, 76, 77, 78, 81, 112, 121, 
	82, 83, 151, 84, 153, 158, 87, 159, 
	161, 88, 158, 90, 159, 160, 92, 93, 
	87, 161, 162, 96, 97, 99, 100, 102, 
	99, 100, 102, 164, 101, 103, 163, 104, 
	106, 109, 173, 174, 113, 114, 119, 115, 
	116, 117, 176, 118, 120, 122, 125, 18, 
	19, 26, 127, 128, 129, 130, 22, 23, 
	26, 135, 30, 32, 136, 137, 138, 139, 
	140, 141, 142, 33, 143, 144, 22, 26, 
	145, 146, 148, 149, 152, 85, 86, 98, 
	154, 155, 156, 157, 94, 95, 98, 89, 
	91, 165, 105, 107, 108, 110, 166, 167, 
	168, 169, 170, 171, 172, 111, 173, 174, 
	94, 98, 175, 177, 178, 
}

var _uri_trans_actions []byte = []byte{
	0, 0, 0, 0, 5, 0, 3, 3, 
	17, 17, 1, 0, 0, 0, 7, 0, 
	0, 0, 1, 1, 0, 0, 0, 0, 
	0, 0, 0, 0, 1, 1, 1, 0, 
	0, 0, 0, 0, 0, 0, 1, 1, 
	0, 0, 0, 0, 0, 3, 3, 3, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 1, 1, 1, 
	1, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 1, 1, 1, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 3, 3, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	9, 9, 0, 0, 0, 0, 0, 0, 
	11, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 15, 20, 
	0, 0, 0, 0, 0, 0, 9, 9, 
	0, 0, 0, 0, 0, 0, 11, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	15, 20, 0, 0, 0, 
}

var _uri_eof_actions []byte = []byte{
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 9, 9, 9, 9, 
	9, 9, 9, 11, 11, 11, 13, 11, 
	11, 11, 11, 11, 11, 11, 11, 20, 
	20, 20, 20, 9, 9, 9, 9, 9, 
	9, 9, 9, 9, 9, 9, 11, 11, 
	11, 11, 11, 13, 13, 11, 11, 11, 
	11, 11, 11, 11, 11, 20, 20, 20, 
	9, 9, 9, 
}

const uri_start int = 1
const uri_first_final int = 124
const uri_error int = 0

const uri_en_main int = 1


//line parse_uri.rl:14
	uri := &URI{}
	m   := 0 // marker
	m1  := 0 // additional marker
	cs  := 0 // current state
	p   := 0 // data pointer
	pe  := len(data) // data end pointer
	eof := len(data)

	
//line parse_uri.rl:43


	
//line parse_uri.go:700
	{
	cs = uri_start
	}

//line parse_uri.rl:46
	
//line parse_uri.go:707
	{
	var _klen int
	var _trans int
	var _acts int
	var _nacts uint
	var _keys int
	if p == pe {
		goto _test_eof
	}
	if cs == 0 {
		goto _out
	}
_resume:
	_keys = int(_uri_key_offsets[cs])
	_trans = int(_uri_index_offsets[cs])

	_klen = int(_uri_single_lengths[cs])
	if _klen > 0 {
		_lower := int(_keys)
		var _mid int
		_upper := int(_keys + _klen - 1)
		for {
			if _upper < _lower {
				break
			}

			_mid = _lower + ((_upper - _lower) >> 1)
			switch {
			case data[p] < _uri_trans_keys[_mid]:
				_upper = _mid - 1
			case data[p] > _uri_trans_keys[_mid]:
				_lower = _mid + 1
			default:
				_trans += int(_mid - int(_keys))
				goto _match
			}
		}
		_keys += _klen
		_trans += _klen
	}

	_klen = int(_uri_range_lengths[cs])
	if _klen > 0 {
		_lower := int(_keys)
		var _mid int
		_upper := int(_keys + (_klen << 1) - 2)
		for {
			if _upper < _lower {
				break
			}

			_mid = _lower + (((_upper - _lower) >> 1) & ^1)
			switch {
			case data[p] < _uri_trans_keys[_mid]:
				_upper = _mid - 2
			case data[p] > _uri_trans_keys[_mid + 1]:
				_lower = _mid + 2
			default:
				_trans += int((_mid - int(_keys)) >> 1)
				goto _match
			}
		}
		_trans += _klen
	}

_match:
	_trans = int(_uri_indicies[_trans])
	cs = int(_uri_trans_targs[_trans])

	if _uri_trans_actions[_trans] == 0 {
		goto _again
	}

	_acts = int(_uri_trans_actions[_trans])
	_nacts = uint(_uri_actions[_acts]); _acts++
	for ; _nacts > 0; _nacts-- {
		_acts++
		switch _uri_actions[_acts-1] {
		case 0:
//line parse_uri.rl:23
 m = p 
		case 1:
//line parse_uri.rl:24
 m1 = p 
		case 2:
//line parse_uri.rl:25
 uri.Scheme    = data[:p] 
		case 3:
//line parse_uri.rl:26
 uri.Userinfo  = data[m1:p] 
		case 4:
//line parse_uri.rl:27
 uri.Hostport  = data[m:p] 
		case 5:
//line parse_uri.rl:28
 uri.Params    = Params(data[m:p]).setup() 
		case 7:
//line parse_uri.rl:30
 uri.Transport = data[m1:p] 
//line parse_uri.go:807
		}
	}

_again:
	if cs == 0 {
		goto _out
	}
	p++
	if p != pe {
		goto _resume
	}
	_test_eof: {}
	if p == eof {
		__acts := _uri_eof_actions[cs]
		__nacts := uint(_uri_actions[__acts]); __acts++
		for ; __nacts > 0; __nacts-- {
			__acts++
			switch _uri_actions[__acts-1] {
			case 4:
//line parse_uri.rl:27
 uri.Hostport  = data[m:p] 
			case 5:
//line parse_uri.rl:28
 uri.Params    = Params(data[m:p]).setup() 
			case 6:
//line parse_uri.rl:29
 uri.Headers   = data[m:p] 
			case 7:
//line parse_uri.rl:30
 uri.Transport = data[m1:p] 
//line parse_uri.go:838
			}
		}
	}

	_out: {}
	}

//line parse_uri.rl:47

	if cs >= uri_first_final {
		return uri, nil
	}

	if p == pe {
		return nil, fmt.Errorf("%w: unexpected eof: %q", ErrURIParse, data)
	}

	return nil, fmt.Errorf("%w: error in uri at pos %d: %q>>%q<<", ErrURIParse, p, data[:p],data[p:])
}
